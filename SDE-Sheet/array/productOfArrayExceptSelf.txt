//https://www.youtube.com/watch?v=bNvIQI2wAjk

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.
Example 1:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]

Optimised App:
TC: O(N) SC:O(1)
Code:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector<int> res(n,1);
        int i,pre,post;
        pre=1;
        post=1;
        for(i=0;i<n;i++)
        {
            res[i]=pre;
            pre*=nums[i];
        }
        for(i=n-1;i>=0;i--)
        {
            res[i]*=post;
            post*=nums[i];
        }
        return res;
    }