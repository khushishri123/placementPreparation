Problem Statement:
Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.

Eg:
Input:
N = 8
A[] = {15,-2,2,-8,1,7,10,23}
Output: 5
Explanation: The largest subarray with
sum 0 will be -2 2 -8 1 7.

Approach :
We are going to use hashing.
TC: O(NlogN)
SC: O(N) //since we will use map

Code:
import java.util.*;
int maxLen(int A[],int n)
{
int i,j;
int maxi,sum;
maxi=0;
sum=0;
HashMap<Integer,Integer> mpp=new HashMap<>();
for(i=0;i<n;i++)
{
sum+=A[i];
if(sum==0)maxi=i+1;
else
{
if(m.get(sum)!=null)maxi=Math.max(maxi,i-m.get(sum));
else m.put(sum,i);
}
}
return maxi;
}
