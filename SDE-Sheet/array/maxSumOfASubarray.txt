Problem Statement:
Given an array and you have to find out subarray with largest sum
or
Find Max Sum of a subarray(Kadene's algo.)

EG:
Input: 10 -2 7 -6 -9 3
Output: 15

Brute Force:
TC: O(N^2)
SC:O(1)

int maxSubarray(int A[],int n)
{
int sum,max_sum=0;
for(int i=0;i<n;i++)
{
sum=0;
for(int j=i;j<n;j++)
{
sum+=A[j];
max_sum=max(max_sum,sum);
}
}
return max_sum;
}

Best Approach (Kadene's Algo.)
TC:O(N)
SC:O(1)
int maxSubarray(int A[],int n)
{
int i,j;
int lmax,gmax;
lmax=A[0];
gmax=A[0];
for(i=1;i<n;i++)
{
j=A[i]+lmax;
lmax=max(A[i],j);
gmax=(gmax>lmax)?gmax:lmax; //use of ternally operator
}
return gmax;
}

//Now to tell the starting index and ending index
int maxSubaaray(int A[],int n)
{
int i,j,lmax,gmax,si,ei;
lmax=A[0];
gmax=A[0];
si=0;
ei=0;
for(i=1;i<n;i++)
{
j=A[i]+lmax;
if(A[i]>j)
{
lmax=A[i];
si=i;
}
else lmax=j;
if(lmax>gmax)
{
gmax=lmax;
ei=i;
}
}
return gmax;
}