Problem:
Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1

Optimized:
Code:
int singleNumber(vector<int> &nums)
{
int x,y;
x=nums[0];
for(y=1;y<nums.size();y++)x=x^nums[y];
return x;
}

Since: x^x=0 and x^0=x