Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.

 

Example 1:

Input: nums = [2,2,3,4]
Output: 3
Explanation: Valid combinations are: 
2,3,4 (using the first 2)
2,3,4 (using the second 2)
2,2,3
Example 2:

Input: nums = [4,2,3,4]
Output: 4

Here we have used 3 pointer app.

Code in Java:
class Solution {
    public int triangleNumber(int[] nums) {
        //this solution is based on 3 pointer app.
       Arrays.sort(nums);
        int count=0;
        for(int i=0;i<nums.length;i++)
        {
            int l=0;
            int r=i-1;
            while(l<r)
            {
                if(nums[l]+nums[r] > nums[i])
                {
                    //workout on [4,2,3,4] to understand why we have added (r-l)
                    count+=(r-l);
                    r--;
                }
                else l++;
            }
        }
        return count;
    }
}