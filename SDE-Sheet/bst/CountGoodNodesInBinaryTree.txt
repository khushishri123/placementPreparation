Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.
Eg:
Input: root = [3,1,4,3,null,1,5]
Output: 4
Explanation: Nodes in blue are good.
Root Node (3) is always a good node.
Node 4 -> (3,4) is the maximum value in the path starting from the root.
Node 5 -> (3,4,5) is the maximum value in the path
Node 3 -> (3,1,3) is the maximum value in the path.

We will make use of PreorderTraversal.We will maintain a maxi variable to find is it a good node or not.We are just going to store maximum value till  prev node.

public static int dfs(TreeNode root,int maxi)
        {
                if(root==null)return 0;
                int cnt=0;
                if(root.val >= maxi)cnt++;
                maxi=Math.max(root.val,maxi);
                cnt+=dfs(root.left,maxi);
                cnt+=dfs(root.right,maxi);
                return cnt;
        }
    public int goodNodes(TreeNode root) {
     if(root==null)return 0;
            int res=1;
            res+=dfs(root.left,root.val);
            res+=dfs(root.right,root.val);
            return res;
    }