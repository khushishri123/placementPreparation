Given a Binary Tree A containing N nodes.
You need to find the path from Root to a given node B.
NOTE:
No two nodes in the tree have same data values.
You can assume that B is present in the tree A and a path always exists.

Eg:[1,2,3,4,5,6,7] , B=5
Output: [1,2,5]

 public boolean getPath(TreeNode root,ArrayList<Integer> result,int x)
    {
        if(root==null)return false;
        result.add(root.val);
        if(root.val==x)return true;
        if(getPath(root.left,result,x) || getPath(root.right,result,x))return true;
        result.remove(result.size()-1);
        return false;
    }
    public ArrayList<Integer> solve(TreeNode A, int B) {
        ArrayList<Integer> result=new ArrayList<>();
        getPath(A,result,B);
        return result;
    }