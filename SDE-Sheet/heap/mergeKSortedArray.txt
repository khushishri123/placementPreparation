You have been given ‘K’ different arrays/lists, which are sorted individually (in ascending order). You need to merge all the given arrays/list such that the output array/list should be sorted in ascending order.
App 1:
We can sort 2 arrays and merge them into one .After then we can do the same process untill a single array is left.We can use merge method of mergeSort.

App2: Efficient
Create a min heap of pairs.We will put the frist element of all the arrays in the min heap.Insert {firstElement,arrayNumber} of all the sorted aarays in the min heap.
Main idea: we will pop element from the min heap and store into the answer array.insert the next element of the array from which we have popped into Min heap.
Also we have to keep the track of indics of the elements of the array to know which element has been pushed now.

vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    vector<int> ans;
//Maintain min heap    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
    
    for(int i=0;i<k;i++)
    {
        pq.push({kArrays[i][0],i});
    }
    //for storing the indices of elements
    vector<int> ind(k,0);
    while(!pq.empty())
    {
        pair<int,int> temp=pq.top();
        pq.pop();
        ans.push_back(temp.first);
        int i=temp.second;
        if(kArrays[i].size()>ind[i]+1)
        {
            pq.push({kArrays[i][ind[i]+1],i});
            ind[i]+=1;                   
        }
    }
    
    return ans;
}

