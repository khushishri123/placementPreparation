Very important , see its implementation how I did in java

Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]

In this we max heap because we want k closest points so we will eliminate all those points that have greater distance and at the end I will have only k elements that have closest distance to x. I will pop element whenever the size of heap is gretaer than k.

Code in Java:
 public List<Integer> findClosestElements(int[] arr, int k, int x) {
        PriorityQueue<Integer> pq=new PriorityQueue<>((a,b)->(Math.abs(a-x)<Math.abs(b-x)?1:-1));
            for(int it:arr)
            {
                    pq.add(it);
                    if(pq.size()>k)pq.poll();
            }
            List<Integer> ans=new ArrayList<>();
            for(Integer it:pq)
            {
                    ans.add(it);
            }
            Collections.sort(ans);
            return ans;
    }